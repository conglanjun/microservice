spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:15432/postgres
    type: com.alibaba.druid.pool.DruidDataSource
  sql:
    init:
      mode: always
      platform: postgres
      schema-locations:
        - classpath:*.sql
  data:
    redis:
      database: 0
      host: 127.0.0.1
      port: 6379
      timeout: 1000
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.example.springbootdemo.model"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.example.springbootdemo.model"

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.springbootdemo.model
  config-location: classpath:mybatis/mybatis-config.xml
logging:
  level:
    com.example.springbootdemo.mapper: debug
